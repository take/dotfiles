let g:my = {}

let g:my.ft = {
      \ 'html_files' : ['html', 'eruby'],
      \ 'ruby_files' : ['ruby', 'eruby', 'haml']
    \ }

" Plugin read start
set nocompatible

if has('vim_starting')
  set runtimepath+=~/projects/dotfiles/.vim/neobundle.vim/
endif

call neobundle#begin(expand('~/projects/dotfiles/.vim/bundle/'))

" Color scheme
NeoBundle 'chriskempson/base16-vim'

NeoBundle 'Shougo/vimproc', {
            \ 'build' : { 'mac' : 'make -f make_mac.mak' }
          \ }

NeoBundleLazy 'deris/vim-duzzle', {
                \ 'autoload' : { 'commands' : 'DuzzleStart' }
              \ }

NeoBundleLazy 'kien/ctrlp.vim', {
                \ 'autoload' : { 'commands' : 'CtrlP' }
              \ }

NeoBundleLazy 'Shougo/unite.vim', {
                \ 'autoload' : {
                  \ 'commands' : [
                    \ { 'name' : 'Unite', 'complete' : 'customlist,unite#complete_source' },
                    \ 'UniteWithCursorWord'
                  \ ]
                \ }
              \ }

" Unite depending plugins
NeoBundleLazy 'Shougo/vimfiler.vim', {
                \ 'autoload' : {
                  \ 'commands' : ['VimFilerBufferDir', 'VimFilerExplorer'],
                  \ 'explorer' : 1
                \ }
              \ }

NeoBundleLazy 'kmnk/vim-unite-giti', {
                \ 'autoload' : {
                  \ 'unite_sources' : [
                    \ 'giti', 'giti/branch', 'giti/branch/new', 'giti/branch_all',
                    \ 'giti/config', 'giti/log', 'giti/remote', 'giti/status'
                  \ ]
                \ }
              \ }
NeoBundleLazy 'Shougo/unite-outline', {
                \ 'autoload' : { 'unite_sources' : 'outline' }
              \ }
NeoBundleLazy 'basyura/unite-rails', {
                \ 'autoload' : { 'unite_sources' : 'rails' }
              \ }
NeoBundleLazy 'tacroe/unite-mark', {
                \ 'autoload' : { 'unite_sources' : 'mark' }
              \ }
NeoBundleLazy 'thinca/vim-unite-history', {
                \ 'autoload' : { 'unite_sources' : ['history/command', 'history/search'] }
              \ }
NeoBundleLazy 'tsukkee/unite-help', {
                \ 'autoload' : { 'unite_sources' : 'help' }
              \ }
NeoBundleLazy 'tsukkee/unite-tag', {
                \ 'autoload' : { 'unite_sources' : 'tag' }
              \ }
NeoBundleLazy 'ujihisa/unite-colorscheme', {
                \ 'autoload' : { 'unite_sources' : 'colorscheme' }
              \ }

NeoBundleLazy 'thinca/vim-quickrun', {
                \ 'autoload' : { 'commands' : 'QuickRun' }
              \ }

NeoBundleLazy 'alpaca-tc/alpaca_tags', {
                \ 'autoload' : {
                  \ 'commands': ['AlpacaTagsUpdate', 'AlpacaTagsSet', 'AlpacaTagsUpdateBundle']
                \ }
              \ }

" Completion
NeoBundleLazy 'Shougo/neocomplete.vim', {
                \ 'autoload' : { 'insert' : 1 }
              \ }
NeoBundleLazy 'Shougo/neosnippet', {
                \ 'depends' : 'Shougo/neosnippet-snippets',
                \ 'autoload' : {
                  \ 'insert'   : 1,
                  \ 'commands' : 'NeoSnippetEdit'
                \ }
              \ }
" NeoBundle 'Shougo/neocomplcache-rsense', {
"             \ 'depends' : 'Shougo/neocomplete.vim',
"             \ 'autoload' : { 'filetypes' : ['ruby'] }
"           \ }
" NeoBundleLazy 'tkhr/rsense-0.3', {
"                 \ 'build' : {
"                 \    'mac' : 'ruby etc/config.rb > ~/.rsense',
"                 \    'unix' : 'ruby etc/config.rb > ~/.rsense',
"                 \ }
"               \ }

" NeoBundle 'vim-scripts/vim-auto-save'

" Edit features
NeoBundle 'terryma/vim-multiple-cursors'
NeoBundle 'junegunn/vim-easy-align'
NeoBundle 'tpope/vim-repeat'
NeoBundle 'tpope/vim-commentary'
NeoBundleLazy 'tpope/vim-surround', {
                \ 'autoload' : {
                  \ 'mappings' : [
                    \ '<plug>Dsurround', '<plug>Csurround',
                    \ '<plug>Ysurround', '<plug>YSurround',
                    \ '<plug>Yssurround', '<plug>YSsurround',
                    \ '<plug>YSsurround', '<plug>VgSurround',
                    \ '<plug>VSurround'
                  \ ]
                \ }
              \ }
NeoBundle 'jiangmiao/auto-pairs'
NeoBundleLazy 'AndrewRadev/switch.vim', {
                \ 'autoload' : { 'commands' : 'Switch' }
              \ }

" html
NeoBundleLazy 'othree/html5.vim', {
                \ 'autoload' : { 'filetypes' : g:my.ft.html_files}
              \ }

NeoBundleLazy 'vim-scripts/sudo.vim', {
                \ 'autoload': { 'commands': ['SudoRead', 'SudoWrite'] }
              \ }

" Linting
NeoBundle 'editorconfig/editorconfig-vim'
NeoBundle 'scrooloose/syntastic'

" Plugin for markdown files
NeoBundleLazy 'kannokanno/previm', {
                \ 'depends'  : 'tyru/open-browser.vim',
                \ 'autoload' : { 'filetypes' : 'markdown' }
              \ }
NeoBundleLazy 'tpope/vim-markdown', {
                \ 'autoload' : { 'filetypes' : 'markdown' }
              \ }

NeoBundleLazy 'kchmck/vim-coffee-script', {
                \ 'autoload' : { 'filetypes' : 'coffee' }
              \ }

NeoBundleLazy 'briancollins/vim-jst', {
                \ 'depends'  : 'pangloss/vim-javascript',
                \ 'autoload' : { 'filetypes': ['jst', 'ejs'] }
              \ }

NeoBundleLazy 'puppetlabs/puppet-syntax-vim', {
                \ 'autoload' : { 'filetypes': 'puppet'}
              \ }

NeoBundle 'gregsexton/gitv', {
            \ 'depends' : 'tpope/vim-fugitive'
          \ }

" Display features
NeoBundle 'bling/vim-airline', {
            \ 'depends' : 'tpope/vim-fugitive'
          \ }
NeoBundleLazy 'Yggdroot/indentLine', {
                \ 'autoload' : { 'commands' : 'IndentLinesToggle' }
              \ }
" NeoBundle 'jeffkreeftmeijer/vim-numbertoggle'

" Opening URL/files in browser
NeoBundleLazy 'tyru/open-browser.vim', {
                \ 'autoload' : { 'mappings' : '<plug>(openbrowser-smart-search)' }
              \ }
NeoBundleLazy 'tyru/open-browser-github.vim', {
                \ 'depends' : 'tyru/open-browser.vim',
                \ 'autoload' : { 'commands' : 'OpenGithubFile' }
              \ }

NeoBundle 'vim-scripts/PreciseJump'

NeoBundle 'xolox/vim-session', {
            \ 'depends' : 'xolox/vim-misc',
          \ }

NeoBundle 'airblade/vim-gitgutter'

" Ruby/Rails
NeoBundle 'tpope/vim-rails', {
            \ 'autoload' : { 'filetypes' : g:my.ft.ruby_files }
          \ }
NeoBundleLazy 'tpope/vim-bundler', {
                \ 'autoload' : { 'filetypes' : g:my.ft.ruby_files }
              \ }
NeoBundleLazy 'tpope/vim-endwise', {
                \ 'autoload' : { 'filetypes' : 'ruby' }
              \ }
NeoBundleLazy 'thoughtbot/vim-rspec', {
                \ 'depends'  : 'tpope/vim-dispatch',
                \ 'autoload' : { 'filetypes' : 'ruby' }
              \ }

" Go
NeoBundleLazy 'Blackrush/vim-gocode', {
                \ 'autoload': { 'filetypes': 'go' }
              \ }

call neobundle#end()

" Installation check
NeoBundleCheck
